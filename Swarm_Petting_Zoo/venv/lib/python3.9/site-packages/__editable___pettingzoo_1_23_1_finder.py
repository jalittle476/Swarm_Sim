import sys
from importlib.machinery import ModuleSpec
from importlib.machinery import all_suffixes as module_suffixes
from importlib.util import spec_from_file_location
from itertools import chain
from pathlib import Path

MAPPING = {'pettingzoo': '/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo'}
NAMESPACES = {'pettingzoo.butterfly.knights_archers_zombies.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/butterfly/knights_archers_zombies/img'], 'pettingzoo.classic.connect_four.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/connect_four/img'], 'pettingzoo.classic.go.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/go/img'], 'pettingzoo.classic.rps.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/rps/img'], 'pettingzoo.classic.rps.font': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/rps/font'], 'pettingzoo.classic.rlcard_envs.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/rlcard_envs/img'], 'pettingzoo.classic.rlcard_envs.font': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/rlcard_envs/font'], 'pettingzoo.classic.chess.img': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/classic/chess/img'], 'pettingzoo.atari.combat_plane': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/combat_plane'], 'pettingzoo.atari.space_war': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/space_war'], 'pettingzoo.atari.warlords': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/warlords'], 'pettingzoo.atari.combat_tank': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/combat_tank'], 'pettingzoo.atari.quadrapong': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/quadrapong'], 'pettingzoo.atari.joust': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/joust'], 'pettingzoo.atari.entombed_cooperative': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/entombed_cooperative'], 'pettingzoo.atari.space_invaders': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/space_invaders'], 'pettingzoo.atari.ice_hockey': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/ice_hockey'], 'pettingzoo.atari.othello': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/othello'], 'pettingzoo.atari.maze_craze': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/maze_craze'], 'pettingzoo.atari.wizard_of_wor': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/wizard_of_wor'], 'pettingzoo.atari.foozpong': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/foozpong'], 'pettingzoo.atari.mario_bros': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/mario_bros'], 'pettingzoo.atari.pong': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/pong'], 'pettingzoo.atari.basketball_pong': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/basketball_pong'], 'pettingzoo.atari.video_checkers': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/video_checkers'], 'pettingzoo.atari.entombed_competitive': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/entombed_competitive'], 'pettingzoo.atari.tennis': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/tennis'], 'pettingzoo.atari.double_dunk': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/double_dunk'], 'pettingzoo.atari.flag_capture': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/flag_capture'], 'pettingzoo.atari.surround': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/surround'], 'pettingzoo.atari.boxing': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/boxing'], 'pettingzoo.atari.volleyball_pong': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/atari/volleyball_pong'], 'pettingzoo.mpe.simple_crypto': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_crypto'], 'pettingzoo.mpe.simple_adversary': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_adversary'], 'pettingzoo.mpe.simple_reference': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_reference'], 'pettingzoo.mpe.simple_push': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_push'], 'pettingzoo.mpe.simple_speaker_listener': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_speaker_listener'], 'pettingzoo.mpe.simple_spread': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_spread'], 'pettingzoo.mpe.simple': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple'], 'pettingzoo.mpe.simple_world_comm': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_world_comm'], 'pettingzoo.mpe.simple_tag': ['/Users/john/Documents/Swarm_Sim/Swarm_Petting_Zoo/PettingZoo/pettingzoo/mpe/simple_tag']}
PATH_PLACEHOLDER = '__editable__.pettingzoo-1.23.1.finder' + ".__path_hook__"


class _EditableFinder:  # MetaPathFinder
    @classmethod
    def find_spec(cls, fullname, path=None, target=None):
        for pkg, pkg_path in reversed(list(MAPPING.items())):
            if fullname == pkg or fullname.startswith(f"{pkg}."):
                rest = fullname.replace(pkg, "", 1).strip(".").split(".")
                return cls._find_spec(fullname, Path(pkg_path, *rest))

        return None

    @classmethod
    def _find_spec(cls, fullname, candidate_path):
        init = candidate_path / "__init__.py"
        candidates = (candidate_path.with_suffix(x) for x in module_suffixes())
        for candidate in chain([init], candidates):
            if candidate.exists():
                return spec_from_file_location(fullname, candidate)


class _EditableNamespaceFinder:  # PathEntryFinder
    @classmethod
    def _path_hook(cls, path):
        if path == PATH_PLACEHOLDER:
            return cls
        raise ImportError

    @classmethod
    def _paths(cls, fullname):
        # Ensure __path__ is not empty for the spec to be considered a namespace.
        return NAMESPACES[fullname] or MAPPING.get(fullname) or [PATH_PLACEHOLDER]

    @classmethod
    def find_spec(cls, fullname, target=None):
        if fullname in NAMESPACES:
            spec = ModuleSpec(fullname, None, is_package=True)
            spec.submodule_search_locations = cls._paths(fullname)
            return spec
        return None

    @classmethod
    def find_module(cls, fullname):
        return None


def install():
    if not any(finder == _EditableFinder for finder in sys.meta_path):
        sys.meta_path.append(_EditableFinder)

    if not NAMESPACES:
        return

    if not any(hook == _EditableNamespaceFinder._path_hook for hook in sys.path_hooks):
        # PathEntryFinder is needed to create NamespaceSpec without private APIS
        sys.path_hooks.append(_EditableNamespaceFinder._path_hook)
    if PATH_PLACEHOLDER not in sys.path:
        sys.path.append(PATH_PLACEHOLDER)  # Used just to trigger the path hook
